-- Initial schema for the project
-- Creates expenses table, indexes, and RLS policies

begin;

-- Enable pg_trgm for performant ILIKE queries on item
create extension if not exists pg_trgm;

-- Expenses table stores user-scoped expense entries
create table if not exists public.expenses (
  id bigint generated by default as identity primary key,
  user_id uuid not null references auth.users(id) on delete cascade,
  item text not null check (char_length(item) between 1 and 200),
  cost numeric(12,2) not null check (cost >= 0),
  date date not null,
  created_at timestamptz not null default now()
);

-- RLS: only owners can read/write their rows
alter table public.expenses enable row level security;

create policy "Allow select own expenses"
  on public.expenses
  for select
  using (auth.uid() = user_id);

create policy "Allow insert own expenses"
  on public.expenses
  for insert
  with check (auth.uid() = user_id);

-- Useful indexes for common queries
create index if not exists idx_expenses_user_date on public.expenses (user_id, date);
create index if not exists idx_expenses_user_created_at on public.expenses (user_id, created_at);
create index if not exists idx_expenses_item_trgm on public.expenses using gin (item gin_trgm_ops);

commit;